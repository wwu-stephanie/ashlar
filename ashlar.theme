<?php

/**
 * @file
 * Functions to support theming in Ashlar.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_page().
 */
function ashlar_preprocess_page(&$variables) {
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
}

/**
 * Implements hook_preprocess_block().
 */
function ashlar_preprocess_block(&$variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    $variables['block_content'] = $variables['elements']['content']['#block_content'];
  }
}

/**
 * Implements hook_preprocess_field().
 */
function ashlar_preprocess_field(&$variables) {
  $entity_type = $variables['entity_type'];
  $field_type = $variables['field_type'];
  $field_name = $variables['field_name'];
  $element = $variables['element'];
  $object = $element['#object'];
  $bundle = $element['#bundle'];

  if ($entity_type === 'block_content' && $field_type === 'link') {
    if ($object->hasField('field_tracking_event_category')) {
      $variables['element']['#attached']['library'][] = 'ashlar/event-tracking';
      _ashlar_set_tracking_event_category($variables, $object);
    }

    if ($object->hasField('field_button_style')) {
      _ashlar_set_button_style($variables, $object);
    }
  }
}

/**
 * Helper function to add tracking event class attribute to field.
 */
function _ashlar_set_tracking_event_category(&$variables, $object) {
  if (!$object->field_tracking_event_category->isEmpty()) {
    foreach ($variables['items'] as &$item) {
      $item['content']['#options']['attributes']['data-tracking-event-category'] = $object->field_tracking_event_category->value;
    }
  }
}

/**
 * Helper function to add button style classes to field.
 */
function _ashlar_set_button_style(&$variables, $object) {
  if (!$object->field_button_style->isEmpty()) {
    foreach ($variables['items'] as &$item) {
      $item['content']['#options']['attributes']['class'][] = 'button';
      $item['content']['#options']['attributes']['class'][] = $object->field_button_style->value;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 *
 * Adds a form id based template suggestion for all forms.
 */
function ashlar_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form__' . $variables['element']['#form_id'];
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 *
 * Adds classes to menu links. This cannot be done in Twig templates without
 * using Drupal specific extensions.
 */
function ashlar_preprocess_menu(&$variables) {
  _menu_links($variables['items'], 0);
}

/**
 * Helper function for adding classes to menu links.
 */
function _menu_links(&$items, $menu_level) {
  foreach ($items as $item) {
    $classes = ['menu-item'];
    if ($item['is_expanded']) {
      $classes[] = 'menu-item--expanded';
    }
    if ($item['is_collapsed']) {
      $classes[] = 'menu-item--collapsed';
    }
    if ($item['in_active_trail']) {
      $classes[] = 'menu-item--active-trail';
    }
    $item['attributes']->addClass($classes);
    if ($item['below']) {
      _menu_links($item['below'], $menu_level + 1);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig.
 *
 * Removes specific attributes from pagers. This cannot be done in Twig
 * templates without using Drupal specific extensions.
 */
function ashlar_preprocess_pager(&$variables) {
  $keys = [
    'first' => ['href', 'title'],
    'previous' => ['href', 'title', 'rel'],
    'next' => ['href', 'title', 'rel'],
    'last' => ['href', 'title'],
  ];
  foreach ($keys as $key => $remove) {
    _remove_attributes($variables, $key, $remove);
  }
  if (isset($variables['items']['pages'])) {
    foreach ($variables['items']['pages'] as $key => $item) {
      if (isset($item['attributes'])) {
        $item['attributes']->removeAttribute('href')->removeAttribute('title');
      }
    }
  }
}

/**
 * Helper function for removing attributes.
 */
function _remove_attributes(&$variables, $key, $remove) {
  if (isset($variables['items'][$key]['attributes'])) {
    foreach ($remove as $attribute) {
      $variables['items'][$key]['attributes']->removeAttribute($attribute);
    }
  }
}

/**
 * Implements template_preprocess_ds_entity_view().
 *
 * Adds the entity and possible contextual links to PatternContext when using
 * UI Patterns Layouts module.
 */
function ashlar_preprocess_ds_entity_view(&$variables) {
  if (isset($variables['content']['#type']) && $variables['content']['#type'] == 'pattern') {
    $variables['content']['#context']['entity'] = $variables['content']['#entity'];
    if (isset($variables['title_suffix']['contextual_links'])) {
      $variables['content']['#context']['contextual_links'] = $variables['title_suffix']['contextual_links'];
    }
  }
}
