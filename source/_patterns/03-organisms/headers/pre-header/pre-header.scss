/*------------------------------------------------------------------------------
Organism: Pre-header
--------------------------------------------------------------------------------
------------------------------------------------------------------------------*/
wwu-pre-header {
  position: relative;
  display: flex;
  justify-content: flex-end;
  font-size: var(--font-size--xs);
  noscript {
    display: flex;
    justify-content: flex-end;
  }
  .material-icons {
    font-size: var(--icon-size--2xs);
    margin-left: var(--space--2xs);
  }
  a.skip-link,
  .skip-to button {
    place-items: center;

    display: flex;
    min-height: var(--touch-target--min);
    padding: var(--space--2xs);
    transition: background-image var(--transition-speed--fast)
      var(--ease--standard);
    text-decoration: none;
    background-size: 100% 100%;
    font-weight: var(--font-weight--regular);
    color: var(--white);
    &:visited {
      color: inherit;
    }
    &:active,
    &:hover,
    &:focus {
      color: var(--dark-blue--darker--60);
      outline-color: var(--dark-blue--darker--60);
      outline-offset: calc(-1 * var(--border-width--md));
      background-image: var(--gradient--vertical--light-blue);
    }
  }
  .skip-to {
    position: relative;

    [role="menu"] {
      max-height: calc(100vh * 0.75);
      overflow-y: scroll;

      padding: var(--space--2xs);
      background-color: var(--black);
      border: none;
      border-radius: 0;
    }

    [role="separator"] {
      margin: 0;
      padding: var(--space--2xs);
      border: none;
      background-color: transparent;
      color: var(--white);
    }

    [role="menuitem"] {
      color: var(--white);
      background-color: var(--gray--darker--40);
      padding: 0;
      cursor: pointer;

      &:focus {
        padding: 0;
        border: none;
        outline: dotted var(--border-width--md);
        outline-offset: calc(-1 * var(--border-width--md));
      }

      &.last {
        border-radius: 0;
      }

      .level,
      .label {
        background-color: transparent;
        color: var(--white);
        padding: var(--space--2xs);
      }

      .level {
        padding-right: 0;
      }
    }

    button {
      border-radius: 0;

      &:focus {
        padding: var(--space--2xs);
        border: none;
        outline: dotted var(--border-width--md);
        outline-offset: calc(-1 * var(--border-width--lg));
      }
    }
  }
  button.toggle-settings {
    place-items: center;

    display: flex;
    min-height: var(--touch-target--min);
    padding: var(--space--2xs);
    transition: background-image var(--transition-speed--fast)
      var(--ease--standard);
    color: inherit;
    border: var(--border-width--sm) solid transparent;
    border-radius: 0;
    background: transparent;
    background-repeat: no-repeat;
    &:hover,
    &:focus,
    &:active {
      color: var(--dark-blue--darker--60);
      background-image: var(--gradient--vertical--light-blue);
      background-size: 100% 100%;
      outline-offset: calc(-1.5 * var(--border-width--md));
    }
    &:active {
      border: var(--border-width--sm) solid transparent;
    }
  }
}
.settings-menu {
  position: absolute;
  z-index: 1;
  top: 100%;
  grid-column: 1 / span all;
  padding: var(--space--xs);
  width: 25rem;
  max-width: 100%;
  border: var(--border-width--lg) solid transparent;

  &.closed {
    visibility: hidden;
    overflow: hidden;
    height: 0;
    transition: opacity var(--ease--standard) var(--transition-speed--fast);
    opacity: 0;
  }
  &.open {
    visibility: visible;
    transition: opacity var(--ease--standard) var(--transition-speed--fast);
    opacity: 1;
    z-index: 2;
  }
  .menu-container {
    display: flex;
    flex: 0 0 100%;
    flex-flow: row wrap;
  }
  fieldset {
    @include breakpoint($medium) {
      width: 49%;
    }
    width: 100%;

    @media (forced-colors: none) {
      width: unset;
      display: flex;
      flex: 1 1 0;
      flex-flow: column nowrap;  
    }
    legend {
      margin: 0;
      padding: var(--space--xs);
    }
    input[type="radio"],
    input[type="radio"] + label {
      &:not(:last-of-type) {
        margin-bottom: var(--space--md);
      }
    }
    input[type="radio"] + label {
      align-self: flex-start;
    }
  }
  .reset-button {
    margin-top: var(--space--xs);
  }
}
