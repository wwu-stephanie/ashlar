/**
* @file
* 01-atoms/tables/_tables.scss
*/

@mixin color-table($light-rows, $dark-rows, $light-headers, $dark-headers) {
  tr {
    &:nth-of-type(odd) {
      background-color: $light-rows;
    }
    &:nth-of-type(even) {
      background-color: $dark-rows;
    }
  }

  td {
    border-left-color: $light-rows;
  }

  th {
    background-color: $light-headers;

    &[colspan],
    &[rowspan] {
      background-color: $dark-headers;
    }

    &:after {
      background-color: $light-headers;
    }
  }
}

table {
  @include color-table($light-gray, $lightest-gray, mix(black, $light-gray, 13%), mix(black, $light-gray, 25%));
  width: 100%;
  margin: $standard-spacing 0;
  table-layout: fixed;
  word-wrap: break-word;
  border-collapse: collapse;

  a:not([class]) {
    color: $darkest-blue;

    &:hover,
    &:active,
    &:focus {
      color: $darkest-blue;
    }
  }

  &.auto-layout {
    table-layout: auto;
  }
}

.auto-layout {
  table {
    table-layout: auto;
  }
}

caption {
  padding-bottom: $standard-spacing;
  font-size: $p-font-size--smaller;
  font-weight: $font-weight--bold;
}

tbody {
  border: none;
}

tr,
td,
th {
  vertical-align: middle;
}

tr {
  border-top: none;
  border-right: none;
  border-bottom: none;
  border-left: none;
  &.even,
  &.odd {
    border-bottom: none;
  }
}

th {
  padding: $half-spacing;
  text-align: left;
  border-top: none;
  border-right: none;
  border-bottom: none;
  border-left: none;
  font-size: $p-font-size--smaller;

  &[colspan],
  &[rowspan] {
    position: relative;

    &:after {
      position: absolute;
      z-index: 1;
      height: 100%;
      content: "";
    }
  }

  &[colspan] {
    text-align: center;
    &:after {
      @include breakpoint($medium) {
        right: -$border-width--thicker - 0.0625rem;
        width: $border-width--thicker;
      }
      top: 0;
      right: -$border-width - 0.0625rem;
      width: $border-width;
    }
  }

  &[rowspan] {
    &:after {
      @include breakpoint($medium) {
        bottom: 0;
        height: $border-width--thicker;
      }
      bottom: 0;
      left: 0;
      width: 100%;
      height: $border-width;
    }
  }
}

td {
  @include breakpoint($medium) {
    border-width: $border-width--thicker;
  }
  padding: $half-spacing;
  border-width: $border-width;
  border-top: none;
  border-bottom: none;
  border-left: solid;
  font-size: $p-font-size--smaller;

  &:first-of-type {
    border-left: none;
  }

  &:last-of-type {
    border-right: $border-width solid $lightest-gray;
  }
}

/* Color Alternates */

.light-blue {
  @include color-table($light-bg-blue, $lightest-bg-blue, mix($dark-blue, $light-bg-blue, 13%), mix($dark-blue, $light-bg-blue, 25%));
}

.lightest-gray {
  @include color-table($white, $lightest-gray, mix($black, $lightest-gray, 10%), mix($black, $lightest-gray, 15%));
}

/* Tables on different bg colors, dark mode */

div[class*='-bg'] {
  table {
    td, 
    th {
      color: initial;

      a:not([class]) {
        color: $dark-blue;

        &:hover,
        &:focus,
        &:active {
          color: $black;
          background-color: mix(black, $light-gray, 20%);
        }

        &:focus {
          outline-color: inherit;
        }
      }
    }
  }
}

.dark-mode {
  @include color-table(mix(black, $light-gray, 60%), mix(black, $light-gray, 65%), mix(black, $light-gray, 70%), mix(black, $light-gray, 75%));

  table {
    a:not([class]) {
      color: $white;

      &:hover,
      &:active,
      &:focus {
        color: $white;
      }
    }
  }

  .lightest-gray {
    @include color-table(mix(black, $light-gray, 50%), mix(black, $light-gray, 55%), mix(black, $light-gray, 60%), mix(black, $light-gray, 65%));
  }

  .light-blue {
    @include color-table(mix($blue, $dark-blue, 50%), mix($blue, $dark-blue, 75%), $dark-blue, $darkest-blue);
  }

  div[class*='-bg'] {
    table {
      td, 
      th {
        color: $white;
  
        a:not([class]) {
          color: unset;
  
          &:hover,
          &:focus,
          &:active {
            color: $black;
            background-color: mix(black, $light-gray, 20%);
          }
  
          &:focus {
            outline-color: inherit;
          }
        }
      }
    }
  }

  /* blue tables on blue backgrounds in dark mode has low contrast -- reset to gray in dark mode */
  .blue-bg, 
  .dark-blue-bg, 
  .darkest-blue-bg, 
  .dark-blue-gradient-bg, 
  .blue-gradient-bg { 
    .light-blue {
      @include color-table(mix(black, $light-gray, 52%), mix(black, $light-gray, 60%), mix(black, $light-gray, 65%), mix(black, $light-gray, 70%));
      
      a:not([class]) {
        color: $white;

        &:hover,
        &:focus,
        &:active {
          color: $white;
          background-color: $darkest-blue;
        }
      }
    }
  }
}

/* Style Alternates */
.responsive-table {
  @include breakpoint($medium) {
    overflow-x: revert;
  }
  overflow-x: scroll;

  table {
    @include breakpoint($medium) {
      width: 100%;
    }
    width: auto;
  }

  caption {
    @include breakpoint($medium) {
      text-align: center;
    }
    text-align: left;
  }
}

.align-top {
  td,
  th {
    vertical-align: top;
  }
}

.align-bottom {
  td,
  th {
    vertical-align: bottom;
  }
}

.font-size--smaller {
  td {
    font-size: $min-base-font-size;
  }

  th {
    font-size: $max-base-font-size--smaller;
  }
}